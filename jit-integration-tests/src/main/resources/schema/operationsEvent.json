{
  "type": "array",
  "items": {
    "type": "object",
    "required": [
      "eventClassifierCode",
      "eventCreatedDateTime",
      "eventDateTime",
      "eventType",
      "operationsEventTypeCode",
      "publisher",
      "publisherRole"
    ],
    "description": "The Event entity is described as a generalization of all the specific event categories. An event always takes place in relation to a shipment and can additionally be linked to a transport or an equipment\n",
    "properties": {
      "eventID": {
        "type": "string",
        "description": "The unique identifier for the event (the message - not the source).\n\n<b>NB</b>&#58; This field should be considered Metadata\n",
        "format": "uuid"
      },
      "eventCreatedDateTime": {
        "type": "string",
        "description": "The timestamp of when the event was created.\n\n<b>NB</b>&#58; This field should be considered Metadata\n",
        "format": "date-time"
      },
      "eventType": {
        "type": "string",
        "description": "The Event Type of the object - to be used as a discriminator.\n\n<b>NB</b>&#58; This field should be considered Metadata\n",
        "enum": [
          "OPERATIONS"
        ]
      },
      "eventClassifierCode": {
        "type": "string",
        "description": "Code for the event classifier. Values can vary depending on eventType\n",
        "enum": [
          "ACT",
          "PLN",
          "EST",
          "REQ"
        ]
      },
      "eventDateTime": {
        "type": "string",
        "description": "The local date and time, where the event took place or when the event will take place, in ISO 8601 format.",
        "format": "date-time"
      },
      "operationsEventTypeCode": {
        "type": "string",
        "description": "The code to identify the type of event that is related to the operation\n- STRT (Started)\n- CMPL (Completed)\n- ARRI (Arrived)\n- DEPA (Departed)\n\nMore details can be found on <a href=\"https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/operationseventtypecodes.csv\">GitHub</a>\n",
        "enum": [
          "STRT",
          "CMPL",
          "ARRI",
          "DEPA"
        ]
      },
      "publisher": {
        "type": "object",
        "description": "refers to a company or a legal entity.",
        "properties": {
          "partyName": {
            "maxLength": 100,
            "type": "string",
            "description": "Name of the party."
          },
          "taxReference1": {
            "maxLength": 20,
            "type": "string",
            "description": "The identifying number of the consignee or shipper (Individual or entity) used for tax purposes."
          },
          "taxReference2": {
            "maxLength": 20,
            "type": "string",
            "description": "Optional second identifying number of the consignee or shipper (Individual or entity) used for tax purposes."
          },
          "publicKey": {
            "maxLength": 500,
            "type": "string",
            "description": "The public key used for a digital signature."
          },
          "address": {
            "type": "object",
            "description": "An object for storing address related information",
            "properties": {
              "name": {
                "maxLength": 100,
                "type": "string",
                "description": "Name of the address"
              },
              "street": {
                "maxLength": 100,
                "type": "string",
                "description": "The name of the street of the partyÔÇÖs address."
              },
              "streetNumber": {
                "maxLength": 50,
                "type": "string",
                "description": "The number of the street of the partyÔÇÖs address."
              },
              "floor": {
                "maxLength": 50,
                "type": "string",
                "description": "The floor of the partyÔÇÖs street number."
              },
              "postCode": {
                "maxLength": 10,
                "type": "string",
                "description": "The post code of the partyÔÇÖs address."
              },
              "city": {
                "maxLength": 65,
                "type": "string",
                "description": "The city name of the partyÔÇÖs address."
              },
              "stateRegion": {
                "maxLength": 65,
                "type": "string",
                "description": "The state/region of the partyÔÇÖs address."
              },
              "country": {
                "maxLength": 75,
                "type": "string",
                "description": "The country of the partyÔÇÖs address."
              }
            }
          },
          "identifyingCodes": {
            "type": "array",
            "items": {
              "required": [
                "DCSAResponsibleAgencyCode",
                "partyCode"
              ],
              "type": "object",
              "properties": {
                "codeListResponsibleAgencyCode": {
                  "type": "string",
                  "description": "UN/CEFACT codes for code list providers:\n- 5 (ISO)\n- 6 (UN/ECE)\n- 11 (Lloyd's register of shipping)\n- 20 (BIC (Bureau International des Containeurs)\n- 54 (IMO (incl. IMDG))\n- 182 (Standard Carrier Alpha Code (SCAC))\n- 274 (ITIGG)\n- 296 (ITU)\n- 306 (SMDG)\n- 399 (EXIS)\n- zzz (Mutually defined)\n\n<b>Deprecated:</b> Use DCSAResponsibleAgencyCode instead\n",
                  "enum": [
                    "5",
                    "6",
                    "11",
                    "20",
                    "54",
                    "182",
                    "274",
                    "296",
                    "306",
                    "399",
                    "zzz"
                  ]
                },
                "DCSAResponsibleAgencyCode": {
                  "type": "string",
                  "description": "A DCSA provided code for UN/CEFACT code list providers:\n- ISO\n- UNECE\n- LLOYD (Lloyd's register of shipping)\n- BIC (Bureau International des Containeurs)\n- IMO\n- SCAC (Standard Carrier Alpha Code)\n- ITIGG\n- ITU\n- SMDG\n- EXIS\n- FMC (Federal Maritime Commission)\n- CBSA (Canada Border Services Agency)\n- ZZZ (Mutually defined)\n",
                  "enum": [
                    "ISO",
                    "UNECE",
                    "LLOYD",
                    "BIC",
                    "IMO",
                    "SCAC",
                    "ITIGG",
                    "ITU",
                    "SMDG",
                    "EXIS",
                    "FMC",
                    "CBSA",
                    "ZZZ"
                  ]
                },
                "partyCode": {
                  "maxLength": 100,
                  "type": "string",
                  "description": "Code to identify the party as provided by the agency\n"
                },
                "codeListName": {
                  "maxLength": 100,
                  "type": "string",
                  "description": "The name of the list, provided by the responsible agency\n"
                }
              }
            }
          },
          "nmftaCode": {
            "maxLength": 4,
            "type": "string",
            "description": "The Standard Carrier Alpha Code (SCAC) provided by NMFTA."
          }
        }
      },
      "publisherRole": {
        "type": "string",
        "description": "The party function code of the publisher:\n- CA (Carrier)\n- AG (Carrier local agent)\n- VSL (Experimental: Vessel)\n- ATH (Experimental: Port Authorities)\n- PLT (Experimental: Port Pilot)\n- TR (Terminal)\n- TWG (Experimental: Towage serice provider)\n- LSH (Experimental: Lashing serice provider)\n- BUK (Experimental: Bunker serice provider)\n\nMore details can be found on <a href=\"https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/publisherrole.csv\">GitHub</a>\n",
        "enum": [
          "CA",
          "AG",
          "VSL",
          "ATH",
          "PLT",
          "TR",
          "TWG",
          "LSH",
          "BUK"
        ]
      },
      "eventLocation": {
        "type": "object",
        "description": "generally used to capture location-related data, also for locations without UN Location Codes.\n",
        "properties": {
          "locationName": {
            "maxLength": 100,
            "type": "string",
            "description": "The name of the location."
          },
          "latitude": {
            "maxLength": 10,
            "type": "string",
            "description": "Geographic coordinate that specifies the northÔÇôsouth position of a point on the Earth&apos;s surface."
          },
          "longitude": {
            "maxLength": 11,
            "type": "string",
            "description": "Geographic coordinate that specifies the eastÔÇôwest position of a point on the Earth&apos;s surface."
          },
          "UNLocationCode": {
            "maxLength": 5,
            "type": "string",
            "description": "The UN Location code specifying where the place is located."
          },
          "facilityCode": {
            "maxLength": 6,
            "type": "string",
            "description": "The code used for identifying the specific facility. This code does <b>not</b> include the UN Location Code.\n"
          },
          "facilityCodeListProvider": {
            "type": "string",
            "description": "The provider used for identifying the facility Code\n",
            "enum": [
              "BIC",
              "SMDG"
            ]
          },
          "address": {
            "description": "Address related information",
            "type": "object",
            "properties": {
              "name": {
                "maxLength": 100,
                "type": "string",
                "description": "Name of the address"
              },
              "street": {
                "maxLength": 100,
                "type": "string",
                "description": "The name of the street of the partyÔÇÖs address."
              },
              "streetNumber": {
                "maxLength": 50,
                "type": "string",
                "description": "The number of the street of the partyÔÇÖs address."
              },
              "floor": {
                "maxLength": 50,
                "type": "string",
                "description": "The floor of the partyÔÇÖs street number."
              },
              "postCode": {
                "maxLength": 10,
                "type": "string",
                "description": "The post code of the partyÔÇÖs address."
              },
              "city": {
                "maxLength": 65,
                "type": "string",
                "description": "The city name of the partyÔÇÖs address."
              },
              "stateRegion": {
                "maxLength": 65,
                "type": "string",
                "description": "The state/region of the partyÔÇÖs address."
              },
              "country": {
                "maxLength": 75,
                "type": "string",
                "description": "The country of the partyÔÇÖs address."
              }
            }
          }
        }
      },
      "portCallServiceTypeCode": {
        "type": "string",
        "description": "The type of the service provided in the port call\n- PILO (Pilotage)\n- MOOR (Mooring)\n- CRGO (Cargo operations)\n- TOWG (Towage)\n- BUNK (Bunkering)\n- LASH (Lashing)\n- SAFE (Safety)\n- FAST (All Fast)\n- GWAY (Gangway down and secure)\n\nMore details can be found on <a href=\"https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/portcallservicetypecodes.csv\">GitHub</a>\n",
        "enum": [
          "PILO",
          "MOOR",
          "CRGO",
          "TOWG",
          "BUNK",
          "LASH",
          "SAFE",
          "FAST",
          "GWAY",
          "ANCO",
          "SLUG",
          "CONV",
          "ICEN",
          "ESCO",
          "SHPW",
          "LCRO",
          "DCRO",
          "VRDY"
        ]
      },
      "portCallPhaseTypeCode": {
        "type": "string",
        "description": "The general direction of the vessel for which information applies\n- INBD (Inbound)\n- ALGS (Alongside)\n- SHIF (Shifting)\n- OUTB (Outbound)\n\nMore details can be found on <a href=\"https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/portcallphasetypecodes.csv\">GitHub</a>\n",
        "enum": [
          "INBD",
          "ALGS",
          "SHIF",
          "OUTB"
        ]
      },
      "facilityTypeCode": {
        "type": "string",
        "description": "A specialized version of the facilityCode to be used in Operations events. The code to identify the specific type of facility.\n- PBPL (Pilot boarding place)\n- BRTH (Berth)\n",
        "enum": [
          "PBPL",
          "BRTH"
        ]
      },
      "delayReasonCode": {
        "maxLength": 3,
        "type": "string",
        "description": "Reason code for the delay. The SMDG-Delay-Reason-Codes are used for this attribute. The code list can be found at http://www.smdg.org/smdg-code-lists/"
      },
      "remark": {
        "maxLength": 500,
        "type": "string",
        "description": "Free text to provide additional information on the context.\n"
      },
      "transportCall": {
        "required": [
          "modeOfTransport",
          "transportCallReference"
        ],
        "type": "object",
        "properties": {
          "transportCallReference": {
            "maxLength": 100,
            "type": "string",
            "description": "The unique identifier for a transport call"
          },
          "carrierServiceCode": {
            "maxLength": 5,
            "type": "string",
            "description": "The code of the service for which the schedule details are published.\n"
          },
          "carrierVoyageNumber": {
            "maxLength": 50,
            "type": "string",
            "description": "The vessel operator-specific identifier of the Voyage."
          },
          "exportVoyageNumber": {
            "maxLength": 50,
            "type": "string",
            "description": "The vessel operator-specific identifier of the export Voyage."
          },
          "importVoyageNumber": {
            "maxLength": 50,
            "type": "string",
            "description": "The vessel operator-specific identifier of the import Voyage."
          },
          "transportCallSequenceNumber": {
            "type": "integer",
            "description": "Transport operator&apos;s key that uniquely identifies each individual call. This key is essential to distinguish between two separate calls at the same location within one voyage."
          },
          "UNLocationCode": {
            "maxLength": 5,
            "type": "string",
            "description": "The UN Location code specifying where the place is located."
          },
          "facilityCode": {
            "maxLength": 6,
            "type": "string",
            "description": "The code used for identifying the specific facility. This code does <b>not</b> include the UN Location Code.\n"
          },
          "facilityCodeListProvider": {
            "type": "string",
            "description": "The provider used for identifying the facility Code\n",
            "enum": [
              "BIC",
              "SMDG"
            ]
          },
          "facilityTypeCode": {
            "type": "string",
            "description": "A specialized version of the facilityCode to be used in TransportCalls. The code to identify the specific type of facility.\n- BOCR (Border crossing)\n- CLOC (Customer location)\n- COFS (Container freight station)\n- COYA (Deprecated - use OFFD intead)\n- OFFD (Off dock storage)\n- DEPO (Depot)\n- INTE (Inland terminal)\n- POTE (Port terminal)\n- RAMP (Ramp)\n",
            "enum": [
              "BOCR",
              "CLOC",
              "COFS",
              "COYA",
              "OFFD",
              "DEPO",
              "INTE",
              "POTE",
              "RAMP"
            ]
          },
          "otherFacility": {
            "maxLength": 50,
            "type": "string",
            "description": "An alternative way to capture the facility when no standardized DCSA facility code can be found."
          },
          "modeOfTransport": {
            "type": "string",
            "description": "The mode of transport as defined by DCSA.\n",
            "enum": [
              "VESSEL",
              "RAIL",
              "TRUCK",
              "BARGE"
            ]
          },
          "location": {
            "type": "object",
            "description": "generally used to capture location-related data, also for locations without UN Location Codes.\n",
            "properties": {
              "locationName": {
                "maxLength": 100,
                "type": "string",
                "description": "The name of the location."
              },
              "latitude": {
                "maxLength": 10,
                "type": "string",
                "description": "Geographic coordinate that specifies the northÔÇôsouth position of a point on the Earth&apos;s surface."
              },
              "longitude": {
                "maxLength": 11,
                "type": "string",
                "description": "Geographic coordinate that specifies the eastÔÇôwest position of a point on the Earth&apos;s surface."
              },
              "UNLocationCode": {
                "maxLength": 5,
                "type": "string",
                "description": "The UN Location code specifying where the place is located."
              },
              "facilityCode": {
                "maxLength": 6,
                "type": "string",
                "description": "The code used for identifying the specific facility. This code does <b>not</b> include the UN Location Code.\n"
              },
              "facilityCodeListProvider": {
                "type": "string",
                "description": "The provider used for identifying the facility Code\n",
                "enum": [
                  "BIC",
                  "SMDG"
                ]
              },
              "address": {
                "description": "Address related information",
                "type": "object",
                "properties": {
                  "name": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Name of the address"
                  },
                  "street": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "The name of the street of the partyÔÇÖs address."
                  },
                  "streetNumber": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The number of the street of the partyÔÇÖs address."
                  },
                  "floor": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The floor of the partyÔÇÖs street number."
                  },
                  "postCode": {
                    "maxLength": 10,
                    "type": "string",
                    "description": "The post code of the partyÔÇÖs address."
                  },
                  "city": {
                    "maxLength": 65,
                    "type": "string",
                    "description": "The city name of the partyÔÇÖs address."
                  },
                  "stateRegion": {
                    "maxLength": 65,
                    "type": "string",
                    "description": "The state/region of the partyÔÇÖs address."
                  },
                  "country": {
                    "maxLength": 75,
                    "type": "string",
                    "description": "The country of the partyÔÇÖs address."
                  }
                }
              }
            }
          },
          "vessel": {
            "required": [
              "vesselIMONumber"
            ],
            "type": "object",
            "description": "describes a floating, sea going structure (mother vessels and feeder vessels) with either an internal or external mode of propulsion designed for the transport of cargo and/or passengers. Ocean vessels are uniquely identified by an IMO number consisting of 7 digits, or alternatively by their AIS signal with an MMSI number. \n",
            "properties": {
              "vesselIMONumber": {
                "maxLength": 7,
                "type": "string",
                "description": "The unique reference for a registered Vessel. The reference is the International Maritime Organisation (IMO) number, also sometimes known as the Lloyd&apos;s register code, which does not change during the lifetime of the vessel\n"
              },
              "vesselName": {
                "maxLength": 35,
                "type": "string",
                "description": "The name of the Vessel given by the Vessel Operator and registered with IMO.\n"
              },
              "vesselFlag": {
                "maxLength": 2,
                "type": "string",
                "description": "The flag of the nation whose laws the vessel is registered under. This is the ISO 3166 two-letter country code\n"
              },
              "vesselCallSignNumber": {
                "maxLength": 10,
                "type": "string",
                "description": "A unique alphanumeric identity that belongs to the vessel and is assigned by the International Telecommunication Union (ITU). It consists of a threeletter alphanumeric prefix that indicates nationality, followed by one to four characters to identify the individual vessel. For instance, vessels registered under Denmark are assigned the prefix ranges 5PA-5QZ, OUAOZZ, and XPA-XPZ. The Call Sign changes whenever a vessel changes its flag.\n"
              },
              "vesselOperatorCarrierCode": {
                "maxLength": 10,
                "type": "string",
                "description": "The carrier who is in charge of the vessel operation based on either the SMDG or SCAC code lists\n"
              },
              "vesselOperatorCarrierCodeListProvider": {
                "type": "string",
                "description": "Identifies the code list provider used for the operator and partner carriercodes.",
                "enum": [
                  "SMDG",
                  "NMFTA"
                ]
              }
            }
          }
        }
      },
      "vesselPosition": {
        "type": "object",
        "description": "on object used to capture latitude and longitude on a location",
        "properties": {
          "latitude": {
            "maxLength": 10,
            "type": "string",
            "description": "Geographic coordinate that specifies the northÔÇôsouth position of a point on the Earth&apos;s surface."
          },
          "longitude": {
            "maxLength": 11,
            "type": "string",
            "description": "Geographic coordinate that specifies the eastÔÇôwest position of a point on the Earth&apos;s surface."
          }
        }
      }
    }
  },
  "$schema": "http://json-schema.org/draft-04/schema#"
}
